AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Static web hosting with continuous deployment pipeline.
Parameters:
  EnvironmentName:
    Type: String
    Default: cicd-stack
    Description: Environment prefixing resources, tagging resources and for importing
      resources from other stacks
  GithubOAuthToken:
    Type: String
    Description: OAuth token for Github
  GithubBranchName:
    Type: String
    Description: GitHub Branch name
  GithubRepoOwner:
    Type: String
    Description: GitHub repo owner user-name. Must be owner
  GithubRepoName:
    Type: String
    Description: GitHub repo name
  BuildSpecFilePath:
    Description: Relative BuildSpec file path for build stage. For more information,
      see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: buildspec.yml
Resources:
  HostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      Tags:
      - Key: project
        Value:
          Fn::Sub: ${EnvironmentName}
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Ref: HostingBucket
  HostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: HostingBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: HostingBucket
              - /*
          Principal:
            AWS:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity '
                - Ref: CloudFrontOriginAccessIdentity
  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          DefaultTTL: 60
          MaxTTL: 240
          MinTTL: 60
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: s3origin
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_All
        Origins:
        - DomainName:
            Fn::GetAtt:
            - HostingBucket
            - RegionalDomainName
          Id: s3origin
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        IPV6Enabled: false
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
      Tags:
      - Key: project
        Value:
          Fn::Sub: ${EnvironmentName}
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
      - Key: project
        Value:
          Ref: EnvironmentName
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Sub: ${EnvironmentName}-cd-pipeline-github
      RoleArn:
        Fn::GetAtt:
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: CodePipelineArtifactStoreBucket
      Stages:
      - Name: Source
        Actions:
        - Name: GithubSourceAction
          OutputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          Configuration:
            Owner:
              Ref: GithubRepoOwner
            Repo:
              Ref: GithubRepoName
            Branch:
              Ref: GithubBranchName
            OAuthToken:
              Ref: GithubOAuthToken
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: BuildAction
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName:
              Ref: BuildProject
          InputArtifacts:
          - Name: SourceOutput
          OutputArtifacts:
          - Name: BuildOutput
          RunOrder: 2
      - Name: Deploy
        Actions:
        - Name: DeployAction
          InputArtifacts:
          - Name: BuildOutput
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          Configuration:
            BucketName:
              Ref: HostingBucket
            Extract: true
          RunOrder: 3
      Tags:
      - Key: project
        Value:
          Ref: EnvironmentName
      RestartExecutionOnUpdate: true
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${EnvironmentName}-codepipeline-service-role
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - codedeploy:*
            - codebuild:*
            - s3:*
            Resource: '*'
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole:
        Fn::GetAtt:
        - BuildProjectRole
        - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Ref: BuildSpecFilePath
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: HOSTING_BUCKET
          Value:
            Ref: HostingBucket
      Tags:
      - Key: project
        Value:
          Ref: EnvironmentName
  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${EnvironmentName}-codebuild-service-role
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            - s3:*
            Resource: '*'
  GitHubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken:
          Ref: GithubOAuthToken
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline:
        Ref: CodePipeline
      TargetAction: GithubSourceAction
      TargetPipelineVersion:
        Fn::GetAtt:
        - CodePipeline
        - Version
      RegisterWithThirdParty: true
Outputs:
  CodePipelineArtifactStoreBucket:
    Description: Bucket used for storing codepieline artifacts
    Value:
      Ref: CodePipelineArtifactStoreBucket
  Domain:
    Description: Cloudfront Domain
    Value:
      Fn::GetAtt:
      - cloudfrontDistribution
      - DomainName
